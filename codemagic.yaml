workflows:
  my-workflow:                # workflow ID
    name: My workflow name    # workflow name displayed in Codemagic UI
    instance_type: mac_mini   # machine instance type
    max_build_duration: 60    # build duration in minutes (min 1, max 120)
    environment:
      # xcode: latest # Define latest, edge or version (e.g. 11.2)
      xcode: 13.4.1
      cocoapods: 1.11.2
      # flutter: stable   # Define the channel name or version (e.g. v1.13.4)
      flutter: 3.0.3
      groups:             # Define your environment variables groups here
        - mobile_credentials
        - apple_credentials
    triggering:
        events:
          - push
    scripts:
        - name: Hello world workflow
          script: echo "Hello World!"
        - name: Create file .env
          script: |
            cat << EOF >> .env
            EOF
        - name: Create file .env-cicd
          script: |
            cat << EOF >> .env-cicd
            FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS=$FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS
            APP_BUNDLE_ID=$APP_BUNDLE_ID
            APPLE_ITC_TEAM_ID=$APPLE_ITC_TEAM_ID
            APPLE_TEAM_ID=$APPLE_TEAM_ID
            FIREBASE_TOKEN=test
            KEYCHAIN_PASSWORD=$KEYCHAIN_PASSWORD
            APP_STORE_CONNECT_AUTH_KEY_ID=$APP_STORE_CONNECT_AUTH_KEY_ID
            APP_STORE_CONNECT_AUTH_ISSUER_ID=$APP_STORE_CONNECT_AUTH_ISSUER_ID
            P12_PASSWORD=$P12_PASSWORD
            CERTIFICATE_PASSWORD=$CERTIFICATE_PASSWORD
            DISTRIBUTE_PROFILE_NAME=$DISTRIBUTE_PROFILE_NAME
            ADHOC_PROFILE_NAME=$ADHOC_PROFILE_NAME
            BUILD_NUMBER=$BUILD_NUMBER
            MOBSF_URL=test
            MOBSF_API_KEY=test
            ADHOC_PROFILE_NAME=$ADHOC_PROFILE_NAME
            BRANCH_NAME=test
            EOF
        - name: Create file GoogleService-Info.plist
          script: |
            cd ios; cat << EOF >> GoogleService-Info.plist
            $GOOGLE_SERVICE_IOS
            EOF
        - name: Create file app_store_connect_key.p8
          script: |
            cd ios; cat << EOF >> app_store_connect_key.p8
            $APP_STORE_CONNECT_AUTH_KEY_P8
            EOF
        - name: Create file distribute_p12_base64.txt
          script: |
            cd ios; cat << EOF >> distribute_p12_base64.txt
            $DISTRIBUTION_P12_BASE64
            EOF
        - name : Generate distribution.p12
          script : base64 -d ios/distribute_p12_base64.txt > ios/distribution.p12
        - name: Create file development_p12_base64.txt
          script: |
            cd ios; cat << EOF >> development_p12_base64.txt
            $DEVELOPMENT_P12_BASE64
            EOF
        - name: Generate development.p12
          script : base64 -d ios/distribute_p12_base64.txt > ios/development.p12
        - name: Create file distribute_profile_base64.txt
          script: |
            cd ios; cat << EOF >> distribute_profile_base64.txt
            $DISTRIBUTE_PROFILE_BASE64
            EOF
        - name : Generate Distribute_comhugemanflutterstarterkit.mobileprovision
          script : base64 -d ios/distribute_profile_base64.txt > ios/Distribute_comhugemanflutterstarterkit.mobileprovision
        - name: Create file adhoc_profile_base64.txt
          script: |
            cd ios; cat << EOF >> adhoc_profile_base64.txt
            $ADHOC_PROFILE_BASE64
            EOF
        - name : AdHoc_comhugemanflutterstarterkit.mobileprovision
          script: base64 -d ios/adhoc_profile_base64.txt > ios/AdHoc_comhugemanflutterstarterkit.mobileprovision
        - name: Install dependencies
          script: make project/install/package/codemagic
        - name : Pod install
          script: cd ios; pod install
        - name : Generate l10n
          script: make l10n/generate
        - name: Generate mock file for test
          script: make test/generate/mock-file
        - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
          script: keychain initialize
        - name: Set up Provisioning profiles from environment variables
          script: |
            PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            mkdir -p "$PROFILES_HOME"
            PROFILE_PATH="$(mktemp "$PROFILES_HOME"/"$ADHOC_PROFILE_NAME".mobileprovision)"
            echo ${ADHOC_PROFILE_BASE64} | base64 --decode > "$PROFILE_PATH"
            echo "Saved provisioning profile $PROFILE_PATH"      
        - name: Set up signing certificate
          script: |
            echo $DEVELOPMENT_P12_BASE64 | base64 --decode > /tmp/certificate.p12
            if [ -z ${CERTIFICATE_PASSWORD+x} ]; then
              # when using a certificate that is not password-protected
              keychain add-certificates --certificate /tmp/certificate.p12
            else
              # when using a password-protected certificate
              keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CERTIFICATE_PASSWORD
            fi      
        - name: Set up code signing settings on Xcode project
          script: xcode-project use-profiles
        # - name : fastlane setup
        #   script : |
        #     cd ios
        #     fastlane setup
        - name : fastlane test lab
          script : |
            cd ios
            fastlane test_lab