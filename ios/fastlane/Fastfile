default_platform(:ios)

fastlane_require 'dotenv'

before_all do
  Dotenv.overload '../../.env'
end

platform:ios do
    # branch: all branch
    desc "Test ios in Firebase test lab"
    lane:test_lab do
#         create_keychain(
#           name: "Keychain",
#           default_keychain: true,
#           unlock: true,
#           timeout: 3600,
#           lock_when_sleeps: true,
#           password: "Password"
#         )

#         puts `ls -ll`
#         puts `pwd`

#         import_certificate(
#           keychain_name: "Keychain",
#           certificate_path: "CERTIFICATE_DEV.cer"
#         )

#         cert
#         sigh(force: true)
#         sh("pwd")
#         sh("ls -la ../../")
#         sh("chmod +x ../../ios")
#         sh("pwd")
#         sh("ls -la ../../")
#         get_certificates(
#           output_path: "/",
#           username:
#         )

#         sh("ls")

#         get_provisioning_profile   # invokes sigh
#         create_keychain(
#           name: "keychain",
#           default_keychain: true,
#           unlock: true,
#           timeout: 3600,
#           lock_when_sleeps: true,
#           password: "password",
#           path: "/home/runner/work/flutter_git_hub_action/flutter_git_hub_action/ios/",
#           keychain_path: "/home/runner/work/flutter_git_hub_action/flutter_git_hub_action/ios/",
#           username: "tee.theeraporn@hugeman.co"
#         )

#         setup_ci

#         git_url(ENV['GIT_URL'])
        puts ENV["MATCH_PASSWORD"]
        puts ENV["FASTLANE_SESSION"]

#           setup_ci if ENV['CI']
          match(
            type: 'appstore',
            app_identifier: ENV["APP_BUNDLE_ID"],
            generate_apple_certs: false,
#             readonly: true
#             username: ENV["MATCH_USERNAME"]
          )

#           setup_ci
#           sync_code_signing(
#             type: "appstore",
#             readonly: is_ci,
#             app_identifier: ENV["APP_BUNDLE_ID"]
#           )

#         sync_code_signing(
#           type: "appstore",
#           readonly: is_ci,
#           git_url: ENV['GIT_URL'],
#           app_identifier: ENV["APP_BUNDLE_ID"]
#         )
#         match(readonly: true)

#       puts ENV["FASTLANE_SESSION"]
#       puts ENV["MATCH_PASSWORD"]
#       puts ENV["SPACESHIP_2FA_SMS_DEFAULT_PHONE_NUMBER"]
#       puts ENV["MATCH_USERNAME"]
#       puts ENV["APP_BUNDLE_ID"]

#       create_keychain(
#         name: "my_keychain",
#         default_keychain: true,
#         unlock: true,
#         timeout: 3600,
#         lock_when_sleeps: true,
#         password: "1234"
#       )

#       setup_ci(force: true) if ENV['CI']
#       match(
#         type: 'appstore',
#         git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
#         skip_confirmation: true,
#         username: ENV["MATCH_USERNAME"],
#         app_identifier: ENV["APP_BUNDLE_ID"],
#         keychain_name: "my_keychain",
#         keychain_password: "1234"
#       )

#         cert
#         get_certificates(
#           username: "tee.theeraporn@hugeman.co",
#           force: true,
#           generate_apple_certs: false
#         )
#         sigh(
#           force: true,
#           username: "tee.theeraporn@hugeman.co",
#           app_identifier: ENV["APP_BUNDLE_ID"]
#         )


        Dir.chdir("../") do
            sh("pod install")
        end

        sh("flutter build ios --config-only integration_test/main_integration_test.dart")
        sh("flutter build ios integration_test/main_integration_test.dart --release --no-codesign")
        xcodebuild(
            workspace: "Runner.xcworkspace",
            configuration: "../Flutter/Release.xcconfig",
            scheme: "Runner",
            derivedDataPath: "../build/ios_integ",
            xcargs: "-sdk iphoneos build-for-testing",
        )
    end

    # run this lane before deploy to firebase app distribute
    desc "Build file for deploy firebase app distribute"
    lane:build_file_for_app_distribution do

    Dir.chdir("../") do
        sh("pod install")
    end
#     match_nuke(
#     type: 'appstore',
#             git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
#             skip_confirmation: true,
#             username: ENV["MATCH_USERNAME"],
#             app_identifier: ENV["APP_BUNDLE_ID"],
#             verbose: true,
#             include_all_certificates: true
#     )
#     cert(force: true, username: "tee.theeraporn@hugeman.co")
#     sigh(force: true, username: "tee.theeraporn@hugeman.co", app_identifier: ENV["APP_BUNDLE_ID"])
#       update_code_signing_settings(
#         path: "Runner.xcodeproj",
#         bundle_identifier: ENV["APP_BUNDLE_ID"],
#         use_automatic_signing: true,
#       )
#       update_project_provisioning(
#          xcodeproj: "Runner.xcodeproj",
#       )
#         build_app(
#           workspace: "Runner.xcworkspace",
#           scheme: "Runner",
#           configuration: "Release",
#           xcargs: "-allowProvisioningUpdates",
#           export_method: "app-store",
#           export_options: {
#                 provisioningProfiles: {
#                     ENV["APP_BUNDLE_ID"] => "com.hugeman.flutterstarterkit AppStore",
#                 }
#             }
#         )


# setup_ci
#  match_nuke(
#         type: 'development',
#                 git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
#                 skip_confirmation: true,
#                 username: ENV["MATCH_USERNAME"],
#                 app_identifier: ENV["APP_BUNDLE_ID"],
# #                 readonly: is_ci,
#                 verbose: true,
# #                 generate_apple_certs: false,
# #                 storage_mode: "git",
#                 include_all_certificates: true
#         )
#       match(
#         type: 'appstore',
#         git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
#         skip_confirmation: true,
#         username: ENV["MATCH_USERNAME"],
#         app_identifier: ENV["APP_BUNDLE_ID"],
#         verbose: true,
#         readonly: true,
# #         generate_apple_certs: false,
# #         storage_mode: "git",
#         include_all_certificates: true
#       )
sh("fastlane fastlane-credentials add --username=#{ENV["APPLE_ID"]} --password=#{ENV["APPLE_PASSWORD"]}")
          sh("fastlane sigh download_all --username=tee.theeraporn@hugeman.co")
      update_code_signing_settings(
                      path: "Runner.xcodeproj",
                      targets: "Runner",
                      profile_name: "	iOS Distribute com.hugeman.flutterstarterki",
                      bundle_identifier: ENV["APP_BUNDLE_ID"],
#                       use_automatic_signing: true,
                    )
#           import_certificate(certificate_path: "ios_distribution.cer")
          update_project_provisioning(
            xcodeproj: "Runner.xcodeproj",
#             profile: "iOS_Distribute_comhugemanflutterstarterkit.mobileprovision", # optional if you use sigh

#             build_configuration: "Release",
            profile_name: "	iOS Distribute com.hugeman.flutterstarterki",
#             certificate: "ios_distribution.cer"
          )
#            sh("flutter build ipa --export-options-plist=ios/exportOptions.plist")
#             sh("xcodebuild -exportArchive -archivePath . -exportPath build/ios -exportOptionsPlist ios/exportOptions.plist -allowProvisioningUpdates")
          install_provisioning_profile(path: "match_AppStore_comhugemanflutterstarterkit.mobileprovision")
        build_app(
          workspace: "Runner.xcworkspace",
          scheme: "Runner",
          configuration: "Release",
          xcargs: "-allowProvisioningUpdates -authenticationKeyPath=app_store_connect_key.p8 -authenticationKeyID=#{ENV["APP_STORE_CONNECT_AUTH_KEY_ID"]} -authenticationKeyIssuerID=#{ENV["APP_STORE_CONNECT_AUTH_ISSUER_ID"]}",
          export_method: "app-store",
#           skip_codesigning: true,
          export_team_id: ENV["APPLE_TEAM_ID"],
#           export_options: {
#                 provisioningProfiles: {
#                     ENV["APP_BUNDLE_ID"] => "iOS Distribute com.hugeman.flutterstarterkit",
#                 }
#             },
#             codesigning_identity: "Apple Development: Theeraporn Tiarawong (W39B24ZGG2)",
#             installer_cert_name: "Apple Development: Theeraporn Tiarawong (W39B24ZGG2)"
        )



#           sh("fastlane fastlane-credentials add --username=#{ENV["APPLE_ID"]} --password=#{ENV["APPLE_PASSWORD"]}")
#           sh("fastlane sigh download_all --username=tee.theeraporn@hugeman.co")
#           sh("flutter build ipa --export-options-plist=ios/exportOptions.plist")
#           api_key = app_store_connect_api_key(
#               key_id: ENV['APP_STORE_CONNECT_AUTH_KEY_ID'],
#               issuer_id: ENV['APP_STORE_CONNECT_AUTH_ISSUER_ID'],
#               key_filepath: "./app_store_connect_key.p8",
#               in_house: false
#             )
#             match(
#               type: 'appstore',
#               app_identifier: ENV["APP_BUNDLE_ID"],
#               api_key: api_key,
#               readonly: true
#             )
#           sh("flutter build ipa --export-options-plist=ios/exportOptions.plist")
#           build_app(
#           workspace: "Runner.xcworkspace",
#           scheme: "Runner",
#           configuration: "Release",
#           xcargs: "-allowProvisioningUpdates -authenticationKeyPath=app_store_connect_key.p8 -authenticationKeyID=#{ENV["APP_STORE_CONNECT_AUTH_KEY_ID"]} -authenticationKeyIssuerID=#{ENV["APP_STORE_CONNECT_AUTH_ISSUER_ID"]}",
#           export_method: "app-store",
# #           skip_codesigning: true,
#           export_team_id: ENV["APPLE_TEAM_ID"],
# #           export_options: {
# #                 provisioningProfiles: {
# #                     ENV["APP_BUNDLE_ID"] => "iOS Distribute com.hugeman.flutterstarterkit",
# #                 }
# #             },
# #             output_directory: "testbuild/ios",
# #             output_name: "testbuild",
# #             codesigning_identity: "Apple Development: Theeraporn Tiarawong (W39B24ZGG2)",
# #             installer_cert_name: "Apple Development: Theeraporn Tiarawong (W39B24ZGG2)"
#         )
    end

    # branches: feature, develop, bugfix, hotfix, release
    desc "Deploy a release version to the Firebase App Distribute for Developer testing"
    lane:app_distribution_group_developer do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS"],
            groups: "developer",
      )
    end

    # branches: feature, develop, bugfix, hotfix, release, master(pre-prod)[tag]
    desc "Deploy a release version to the Firebase App Distribute for QA testing"
    lane:app_distribution_group_qa do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS"],
            groups: "qa",
      )
    end

     # branch: release
    desc "Deploy a release version to the Firebase App Distribute for User testing"
    lane:app_distribution_group_user do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS"],
            groups: "user",
        )
    end

    # tag: master
    desc "Deploy a release version to the App store"
    lane:release do
        cert
        sigh(force: true)

#          puts ENV["MATCH_PASSWORD"]
#         puts ENV["FASTLANE_SESSION"]
#
#           match(
#             type: 'appstore',
#             app_identifier: ENV["APP_BUNDLE_ID"],
#             generate_apple_certs: false,
#           )

        build_app(
            workspace: "Runner.xcworkspace",
            scheme: "Runner",
            configuration: "release",
            xcargs: "-allowProvisioningUpdates",
            export_method: "ad-hoc",
            export_options: {
                provisioningProfiles: {
                    ENV["APP_BUNDLE_ID"] => ENV["APPLE_PROVISIONING_PROFILE_ADHOC"],
                }
            }
        )
        upload_to_app_store
    end
end
