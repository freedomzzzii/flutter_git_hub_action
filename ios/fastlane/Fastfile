default_platform(:ios)

fastlane_require 'dotenv'

before_all do
  Dotenv.overload '../../.env'
end

platform:ios do
    # branch: all branch
    desc "Test ios in Firebase test lab"
    lane:test_lab do
          match(
            type: 'appstore',
            app_identifier: ENV["APP_BUNDLE_ID"],
            generate_apple_certs: false,
#             readonly: true
#             username: ENV["MATCH_USERNAME"]
          )

        Dir.chdir("../") do
            sh("pod install")
        end

        sh("flutter build ios --config-only integration_test/main_integration_test.dart")
        sh("flutter build ios integration_test/main_integration_test.dart --release --no-codesign")
        xcodebuild(
            workspace: "Runner.xcworkspace",
            configuration: "../Flutter/Release.xcconfig",
            scheme: "Runner",
            derivedDataPath: "../build/ios_integ",
            xcargs: "-sdk iphoneos build-for-testing",
        )
    end

    # run this lane before deploy to firebase app distribute
    desc "Build file for deploy firebase app distribute"
    lane:build_file_for_app_distribution do

    Dir.chdir("../") do
        sh("pod install")
    end
#     match_nuke(
#     type: 'appstore',
#             git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
#             skip_confirmation: true,
#             username: ENV["MATCH_USERNAME"],
#             app_identifier: ENV["APP_BUNDLE_ID"],
#             verbose: true,
#             include_all_certificates: true
#     )
#     cert(force: true, username: "tee.theeraporn@hugeman.co")
#     sigh(force: true, username: "tee.theeraporn@hugeman.co", app_identifier: ENV["APP_BUNDLE_ID"])
#       update_code_signing_settings(
#         path: "Runner.xcodeproj",
#         bundle_identifier: ENV["APP_BUNDLE_ID"],
#         use_automatic_signing: true,
#       )
#       update_project_provisioning(
#          xcodeproj: "Runner.xcodeproj",
#       )
#         build_app(
#           workspace: "Runner.xcworkspace",
#           scheme: "Runner",
#           configuration: "Release",
#           xcargs: "-allowProvisioningUpdates",
#           export_method: "app-store",
#           export_options: {
#                 provisioningProfiles: {
#                     ENV["APP_BUNDLE_ID"] => "com.hugeman.flutterstarterkit AppStore",
#                 }
#             }
#         )


# setup_ci
 match_nuke(
        type: 'appstore',
        git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
        skip_confirmation: true,
        username: ENV["MATCH_USERNAME"],
        app_identifier: ENV["APP_BUNDLE_ID"],
#                 readonly: is_ci,
        verbose: true,
#                 generate_apple_certs: false,
#                 storage_mode: "git",
        include_all_certificates: true
        )
      match(
        type: 'appstore',
        git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
        skip_confirmation: true,
        username: ENV["MATCH_USERNAME"],
        app_identifier: ENV["APP_BUNDLE_ID"],
        verbose: true,
        readonly: true,
#         generate_apple_certs: false,
#         storage_mode: "git",
        include_all_certificates: true
      )
#       sh("fastlane fastlane-credentials add --username=#{ENV["APPLE_ID"]} --password=#{ENV["APPLE_PASSWORD"]}")
#       sh("fastlane sigh download_all --username=tee.theeraporn@hugeman.co --output_path=../")
# #       match(
# #           type: "appstore",
# #           readonly: true,
# #           generate_apple_certs: false,
# #           git_url: "https://github.com/freedomzzzii/flutter_git_hub_action.git",
# #           app_identifier: ENV["APP_BUNDLE_ID"],
# #       )
# #       get_certificates(
# # #         development: true,
# #         username: "tee.theeraporn@hugeman.co",
# #         generate_apple_certs: false,
# #         output_path: "../"
# #       )
#       sh("ls -la ../")
#       sh("ls -la ../../")
#         update_project_provisioning(
#           xcodeproj: "Runner.xcodeproj",
#           build_configuration: "Release",
#           profile: "decode_profile.mobileprovision",
# #             certificate: "build_certificate.cer"
#         )
#       update_code_signing_settings(
#           path: "Runner.xcodeproj",
#           targets: "Runner",
#           profile_name: "iOS Distribute com.hugeman.flutterstarterkit",
#           bundle_identifier: ENV["APP_BUNDLE_ID"],
#           use_automatic_signing: false,
# #           code_sign_identity: "Distribution",
#         )
# #           import_certificate(certificate_path: "decode_p12.p12", certificate_password: ENV["P12_PASSWORD"])
# #            sh("flutter build ipa --export-options-plist=ios/exportOptions.plist")
# #             sh("xcodebuild -exportArchive -archivePath . -exportPath build/ios -exportOptionsPlist ios/exportOptions.plist -allowProvisioningUpdates")
#         install_provisioning_profile(path: "decode_profile.mobileprovision")
        build_app(
          workspace: "Runner.xcworkspace",
          scheme: "Runner",
          configuration: "Release",
          xcargs: "-allowProvisioningUpdates -authenticationKeyPath=app_store_connect_key.p8 -authenticationKeyID=#{ENV["APP_STORE_CONNECT_AUTH_KEY_ID"]} -authenticationKeyIssuerID=#{ENV["APP_STORE_CONNECT_AUTH_ISSUER_ID"]}",
          export_method: "app-store",
#           skip_codesigning: true,
          export_team_id: ENV["APPLE_TEAM_ID"],
#           export_options: {
#                 provisioningProfiles: {
#                     ENV["APP_BUNDLE_ID"] => "iOS Distribute com.hugeman.flutterstarterkit",
#                 }
#             },
#             codesigning_identity: "Apple Distribution: HUGEMAN CONSULTANT COMPANY LIMITED (F5TTGBJ3W4)",
#             installer_cert_name: "Apple Development: Theeraporn Tiarawong (W39B24ZGG2)"
        )



#           sh("fastlane fastlane-credentials add --username=#{ENV["APPLE_ID"]} --password=#{ENV["APPLE_PASSWORD"]}")
#           sh("fastlane sigh download_all --username=tee.theeraporn@hugeman.co")
#           sh("flutter build ipa --export-options-plist=ios/exportOptions.plist")
#           api_key = app_store_connect_api_key(
#               key_id: ENV['APP_STORE_CONNECT_AUTH_KEY_ID'],
#               issuer_id: ENV['APP_STORE_CONNECT_AUTH_ISSUER_ID'],
#               key_filepath: "./app_store_connect_key.p8",
#               in_house: false
#             )
#             match(
#               type: 'appstore',
#               app_identifier: ENV["APP_BUNDLE_ID"],
#               api_key: api_key,
#               readonly: true
#             )
#           sh("flutter build ipa --export-options-plist=ios/exportOptions.plist")
#           build_app(
#           workspace: "Runner.xcworkspace",
#           scheme: "Runner",
#           configuration: "Release",
#           xcargs: "-allowProvisioningUpdates -authenticationKeyPath=app_store_connect_key.p8 -authenticationKeyID=#{ENV["APP_STORE_CONNECT_AUTH_KEY_ID"]} -authenticationKeyIssuerID=#{ENV["APP_STORE_CONNECT_AUTH_ISSUER_ID"]}",
#           export_method: "app-store",
# #           skip_codesigning: true,
#           export_team_id: ENV["APPLE_TEAM_ID"],
# #           export_options: {
# #                 provisioningProfiles: {
# #                     ENV["APP_BUNDLE_ID"] => "iOS Distribute com.hugeman.flutterstarterkit",
# #                 }
# #             },
# #             output_directory: "testbuild/ios",
# #             output_name: "testbuild",
# #             codesigning_identity: "Apple Development: Theeraporn Tiarawong (W39B24ZGG2)",
# #             installer_cert_name: "Apple Development: Theeraporn Tiarawong (W39B24ZGG2)"
#         )
    end

    # branches: feature, develop, bugfix, hotfix, release
    desc "Deploy a release version to the Firebase App Distribute for Developer testing"
    lane:app_distribution_group_developer do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS"],
            groups: "developer",
      )
    end

    # branches: feature, develop, bugfix, hotfix, release, master(pre-prod)[tag]
    desc "Deploy a release version to the Firebase App Distribute for QA testing"
    lane:app_distribution_group_qa do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS"],
            groups: "qa",
      )
    end

     # branch: release
    desc "Deploy a release version to the Firebase App Distribute for User testing"
    lane:app_distribution_group_user do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS"],
            groups: "user",
        )
    end

    # tag: master
    desc "Deploy a release version to the App store"
    lane:release do
        cert
        sigh(force: true)

#          puts ENV["MATCH_PASSWORD"]
#         puts ENV["FASTLANE_SESSION"]
#
#           match(
#             type: 'appstore',
#             app_identifier: ENV["APP_BUNDLE_ID"],
#             generate_apple_certs: false,
#           )

        build_app(
            workspace: "Runner.xcworkspace",
            scheme: "Runner",
            configuration: "release",
            xcargs: "-allowProvisioningUpdates",
            export_method: "ad-hoc",
            export_options: {
                provisioningProfiles: {
                    ENV["APP_BUNDLE_ID"] => ENV["APPLE_PROVISIONING_PROFILE_ADHOC"],
                }
            }
        )
        upload_to_app_store
    end
end
