default_platform(:android)

platform :android do

    desc "Deploy a beta version to the Google Play"
    lane:beta do
        sh("flutter build appbundle")
        upload_to_play_store(
            track: 'beta',
            aab:"../build/app/outputs/bundle/release/app-release.aab",
            release_status: 'draft',
        )

        slack(
            message: "Deploy a beta version to the Google Play",
            channel: "#test-integrate-firebase-pocflutter",
            slack_url: "https://hooks.slack.com/services/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",
            default_payloads: ["lane", "test_result", "git_branch", "git_author"]
        )
    end

    desc "Deploy a new release build to the App Distribute"
    lane :app_distribution do
        sh("flutter build apk")

        firebase_app_distribution(
           app: "1:523370163800:android:399e19c561c6d237a5e42d",
           groups: "developer",
           apk_path: "../build/app/outputs/apk/release/app-release.apk"
       )

       slack(
            message: "Deploy android application to app distribution",
            channel: "#test-integrate-firebase-pocflutter",
            slack_url: "https://hooks.slack.com/services/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",
            default_payloads: ["lane", "test_result", "git_branch", "git_author"]
       )
    end

    desc "Test android in Firebase test lab"
    lane :test_lab do
        sh("../../android/gradlew app:assembleAndroidTest --settings-file=../../android/settings.gradle")
        sh("../../android/gradlew app:assembleDebug --settings-file=../../android/settings.gradle -Ptarget=integration_test/main_integration_test.dart")
        sh("flutter build apk")

        slack(
           message: "Test android in Firebase test lab is success",
           channel: "#test-integrate-firebase-pocflutter",  # Optional, by default will post to the default channel configured for the POST URL.
           slack_url: "https://hooks.slack.com/services/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",
           default_payloads: ["lane", "test_result", "git_branch", "git_author"]
        )
    end

    error do |lane, exception, options|
        slack(
           message: "#{lane} -- #{exception.to_s}",
           success: false,
           payload: {
                "Output" => exception.error_info.to_s,
            },
            channel: "#test-integrate-firebase-pocflutter",
            slack_url: "https://hooks.slack.com/services/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",
            default_payloads: ["lane", "test_result", "git_branch", "git_author"]
        )
    end
end