default_platform(:android)

fastlane_require 'dotenv'

before_all do
  Dotenv.overload '../../.env'
end

platform:android do
    # branch: all branch
    desc "Test android in Firebase test lab"
    lane:test_lab do
        sh("../../android/gradlew app:assembleAndroidTest --settings-file=../../android/settings.gradle")
        sh("../../android/gradlew app:assembleDebug --settings-file=../../android/settings.gradle -Ptarget=integration_test/main_integration_test.dart")
    end

    # run this lane before deploy to firebase app distribute
    desc "Build file .apk for deploy firebase app distribute"
    lane:build_file_for_app_distribution do
        sh("flutter build apk --release")
    end

    # branches: feature, develop, bugfix, hotfix, release
    desc "Deploy a beta version to the Firebase App Distribute for Developer testing"
    lane:app_distribution_group_developer do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID"],
            groups: "developer",
            apk_path: "../build/app/outputs/apk/release/app-release.apk",
            firebase_cli_token: ENV["FASTLANE_FIREBASE_TOKEN"]
        )
    end

    # branches: feature, develop, bugfix, hotfix, release, master(pre-prod)[tag]
    desc "Deploy a beta version to the Firebase App Distribute for QA testing"
    lane:app_distribution_group_qa do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID"],
            groups: "qa",
            apk_path: "../build/app/outputs/apk/release/app-release.apk"
       )

        slack(
            message: "Deploy a beta version to the Firebase App Distribute for QA testing is success",
            channel: ENV["FASTLANE_SLACK_CHANNEL"],
            slack_url: ENV["FASTLANE_SLACK_WEB_HOOK"],
            default_payloads: ["lane", "test_result", "git_branch", "git_author"]
        )
    end

    # branch: release
    desc "Deploy a beta version to the Firebase App Distribute for User testing"
    lane:app_distribution_group_user do
        firebase_app_distribution(
            app: ENV["FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID"],
            groups: "user",
            apk_path: "../build/app/outputs/apk/release/app-release.apk"
        )
    end

    # tag: master
    desc "Deploy a beta version to the Play store"
    lane:beta do
        sh("flutter build appbundle --release")

        # Release status (used when uploading new apks/aabs)
        # see more in http://docs.fastlane.tools/actions/upload_to_play_store/#upload_to_play_store
        upload_to_play_store(
            track: 'beta',
            aab:"../build/app/outputs/bundle/release/app-release.aab",
            release_status: 'draft',
#             json_key: '../play-store-credentials.json',
            json_key_data: ENV["GOOGLE_SERVICES_AC_JSON_DATA"]
        )
    end

    error do |lane, exception, options|
        # trigger jenkins
    end
end
