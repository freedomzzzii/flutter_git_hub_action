name: Project workflow

# on: [ push, pull_request ]
on: [ push ]

jobs:
  flutter_analyze_test:
    name: Run flutter test, analyze
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.message.outputs.test }}
    steps:
      - name: Set output
        id: message
        run: echo "::set-output name=test::Run test and analyze is"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
        # gen l10n
      - name: Analyze project source
        run: flutter analyze
      - name: Test (Unit test & Widjet test)
        run: flutter test --coverage
        # gen output test coverage
        # gen mock file
      - name: Run tests
        run: flutter test

  update_version:
    name: Update code version for build
    needs: [ fluter_analyze_test ]
    runs-on: ubuntu-latest
    steps:
      - name: Generate build number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}
      - name: Print new build number and run number
        run: echo "Build number is $BUILD_NUMBER, $GITHUB_RUN_NUMBER"
      - name: Increate version code
        run: perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/$1.('$GITHUB_RUN_NUMBER')/e' pubspec.yaml

  build_ios:
    name: Build Flutter (iOS)
    needs: [ fluter_analyze_test, update_version ]
    runs-on: macos-latest
    outputs:
      message: ${{ steps.message.outputs.test }}
    steps:
      - name: Set output
        id: message
        run: echo "::set-output name=test::Build file .ipa is"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Clean project
        run: flutter clean
      - name: Install dependencies
        run: flutter pub get
        # gen l10n
      - name: Build file .ipa
        run: flutter build ios --release
        #        continue-on-error: true
        # TODO: upload output file
  #      - name: Upload ipa
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: appbundle-build
  #          path: build/app/outputs/bundle/release

  build_appbundle:
    name: Build Flutter (Android - Appbundle)
    needs: [ fluter_analyze_test, update_version ]
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.message.outputs.test }}
    steps:
      - name: Set output
        id: message
        run: echo "::set-output name=test::Build file .aab is"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Clean project
        run: flutter clean
      - name: Install dependencies
        run: flutter pub get
        # gen l10n
      - name: Build file .aab
        run: flutter build appbundle
      - name: Upload appbundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle-build
          path: build/app/outputs/bundle/release

  build_apk:
    name: Build Flutter (Android - APK)
    needs: [ fluter_analyze_test, update_version ]
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.message.outputs.test }}
    steps:
      - name: Set output
        id: message
        run: echo "::set-output name=test::Build file .apk is"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Clean project
        run: flutter clean
      - name: Install dependencies
        run: flutter pub get
        # gen l10n
      - name: Build file .apk
        run: flutter build apk
      - name: Upload apk
        uses: actions/upload-artifact@v2
        with:
          name: appbundle-build
          path: build/app/outputs/apk/release

  build_web:
    name: Build Flutter (Web)
    needs: [ fluter_analyze_test, update_version ]
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.message.outputs.test }}
    steps:
      - name: Set output
        id: message
        run: echo "::set-output name=test::Build web is"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Clean project
        run: flutter clean
      - name: Install dependencies
        run: flutter pub get
        # gen l10n
      - name: Build web
        run: flutter build web

  distribute_app:
    name: Upload file .apk, .aab, .ipa to Firebase App Distribution
    #    needs: [ build_apk, build_appbundle, build_ios ]
    needs: [ build_apk, build_appbundle ]
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.message.outputs.test }}
    steps:
      - name: Set output
        id: message
        run: echo "::set-output name=test::Upload app to Firebase app distribute is"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: appbundle-build
      - name: Upload apk
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: developer
          file: app-release.apk
      - name: Upload apk
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: developer
          file: app-release.apk

  notify_slack:
    runs-on: ubuntu-latest
    needs:
      - fluter_analyze_test
      - build_ios
      - build_appbundle
      - build_apk
      - build_web
      - distribute_app
    if: always()
    steps:
      - name: Notify test resault
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ needs.fluter_analyze_test.result }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "${{needs.fluter_analyze_test.outputs.message}} ${{ needs.flutter_analyze_test.result }}"
      - name: Notify build .ipa resault
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ needs.build_ios.result }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "${{needs.build_ios.outputs.message}} ${{ needs.build_ios.result }}"
      - name: Notify build app bundle resault
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ needs.build_appbundle.result }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "${{needs.build_appbundle.outputs.message}} ${{ needs.build_appbundle.result }}"
      - name: Notify build .apk resault
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ needs.build_apk.result }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "${{needs.build_apk.outputs.message}} ${{ needs.build_apk.result }}"
      - name: Notify upload app to firebase app distribute resault
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ needs.distribute_app.result }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "${{needs.distribute_app.outputs.message}} ${{ needs.distribute_app.result }}"
