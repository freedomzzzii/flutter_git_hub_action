name: CI/CD fastlane for Android

on:
   workflow_dispatch:
     inputs:
       apiUrl:
         description: 'API URL'
         required: true
       ssrUrl:
         description: 'Server send event URL'
         required: true
       grpcWebScheme:
         description: 'GRPC web scheme'
         required: true
       grpcWebDomain:
         description: 'GRPC web domain name'
         required: true
       grpcWebPort:
         description: 'GRPC web running port number'
         required: true
       grpcMobileDomain:
         description: 'GRPC mobile domain name'
         required: true
       grpcMobilePort:
         description: 'GRPC mobile running port number'
         required: true
       websocketUrl:
         description: 'Websocket URL'
         required: true
       branch:
         description: 'Branch trigger workflow'
         required: true

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Generate build number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.github_token }}
      - name: Print new build number and run number
        run: echo "Build number is $BUILD_NUMBER, $GITHUB_RUN_NUMBER"
      - name: Create file .env
        run: |
          cat << EOF >> .env
          API_URL=${{ github.event.inputs.apiUrl }}
          SSR_URL=${{ github.event.inputs.ssrUrl }}
          GRPC_WEB_SCHEME=${{ github.event.inputs.grpcWebScheme }}
          GRPC_WEB_DOMAIN=${{ github.event.inputs.grpcWebDomain }}
          GRPC_WEB_PORT=${{ github.event.inputs.grpcWebPort }}
          GRPC_MOBILE_DOMAIN=${{ github.event.inputs.grpcMobileDomain }}
          GRPC_MOBILE_PORT=${{ github.event.inputs.grpcMobilePort }}
          WEB_SOCKET_URL=${{ github.event.inputs.websocketUrl }}
          EOF
      - name: Create file .env-cicd
        run: |
          cat << EOF >> .env-cicd
          FASTLANE_SLACK_WEB_HOOK=${{ secrets.FASTLANE_SLACK_WEB_HOOK }}
          FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID=${{ secrets.FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID }}
          APP_BUNDLE_ID=${{ secrets.APP_BUNDLE_ID }}
          FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}
          BUILD_NUMBER=$BUILD_NUMBER
          BRANCH_NAME=${{ github.event.inputs.branch }}
          EOF
      - name: Create file google-services.json
        run: |
          cd android/app; cat << EOF >> google-services.json
          ${{ secrets.GOOGLE_SERVICES_ANDROID }}
          EOF
      - name: Create file encode-upload-keystore.jks
        run: |
          cd android; cat << EOF >> encode-upload-keystore.jks
          ${{ secrets.UPLOAD_KEYSTORE }}
          EOF
      - name: Create file upload-keystore.jks
        run: base64 -d android/encode-upload-keystore.jks > android/upload-keystore.jks
      - name: Create file play-store-credentials.json
        run: |
          cat << EOF >> play-store-credentials.json
          ${{ secrets.PLAY_STORE_CREDENTIALS }}
          EOF
      - name: Create file key.properties
        run: |
          cd android; cat << EOF >> key.properties
          ${{ secrets.KEY_PROPERTIES_ANDROID }}
          EOF
      - name: Install dependencies
        run: make project/install/package
      - name: Generate l10n
        run: make l10n/generate
      - name: Generate mock file for test
        run: make test/generate/mock-file
      - name: Print new build number and run number
        run: echo "Build number is $BUILD_NUMBER, $GITHUB_RUN_NUMBER"
      - name: Cache file .env
        uses: actions/cache@v2
        id: file-env
        with:
          path: ./.env
          key: file-env
      - name: Cache file .env-cicd
        uses: actions/cache@v2
        id: file-env-cicd
        with:
          path: ./.env-cicd
          key: file-env-cicd
      - name: Cache file google-services.json
        uses: actions/cache@v2
        id: file-env-google-service-android
        with:
          path: ./android/app/google-services.json
          key: file-env-google-service-android
      - name: Cache file upload-keystore.jks
        uses: actions/cache@v2
        id: file-env-upload-keystore
        with:
          path: ./android/upload-keystore.jks
          key: file-env-upload-keystore
      - name: Cache file play-store-credemtials.json
        uses: actions/cache@v2
        id: file-env-play-store
        with:
          path: ./play-store-credentials.json
          key: file-env-play-store
      - name: Cache file key.properties
        uses: actions/cache@v2
        id: file-env-key-property
        with:
          path: ./android/key.properties
          key: file-env-key-property
      - name: Cache file .flutter-plugins
        uses: actions/cache@v2
        id: file-flutter-plugins
        with:
          path: ./.flutter-plugins
          key: file-flutter-plugins
      - name: Cache file .flutter-plugins-depencies
        uses: actions/cache@v2
        id: file-flutter-plugins-dependency
        with:
          path: ./.flutter-plugins-dependencies
          key: file-flutter-plugins-dependency
      - name: Cache file .packages
        uses: actions/cache@v2
        id: file-flutter-packages
        with:
          path: ./.packages
          key: file-flutter-packages
      - name: Cache file .dart_tool
        uses: actions/cache@v2
        id: file-dart-tool
        with:
          path: ./.dart_tool
          key: file-dart-tool
      - name: Cache file l10n
        uses: actions/cache@v2
        id: file-l10n
        with:
          path: ./lib/src/configs/l10n
          key: file-l10n
      - name: Cache file main_integration_test.mocks.dart
        uses: actions/cache@v2
        id: file-mock-integration-test
        with:
          path: ./integration_test/main_integration_test.mocks.dart
          key: file-mock-integration-test

  build_apk:
    needs: [ setup ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Cache file .env
        uses: actions/cache@v2
        id: file-env
        with:
          path: ./.env
          key: file-env
      - name: Cache file .env-cicd
        uses: actions/cache@v2
        id: file-env-cicd
        with:
          path: ./.env-cicd
          key: file-env-cicd
      - name: Cache file google-services.json
        uses: actions/cache@v2
        id: file-env-google-service-android
        with:
          path: ./android/app/google-services.json
          key: file-env-google-service-android
      - name: Cache file upload-keystore.jks
        uses: actions/cache@v2
        id: file-env-upload-keystore
        with:
          path: ./android/upload-keystore.jks
          key: file-env-upload-keystore
      - name: Cache file play-store-credemtials.json
        uses: actions/cache@v2
        id: file-env-play-store
        with:
          path: ./play-store-credentials.json
          key: file-env-play-store
      - name: Cache file key.properties
        uses: actions/cache@v2
        id: file-env-key-property
        with:
          path: ./android/key.properties
          key: file-env-key-property
      - name: Cache file .flutter-plugins
        uses: actions/cache@v2
        id: file-flutter-plugins
        with:
          path: ./.flutter-plugins
          key: file-flutter-plugins
      - name: Cache file .flutter-plugins-depencies
        uses: actions/cache@v2
        id: file-flutter-plugins-dependency
        with:
          path: ./.flutter-plugins-dependencies
          key: file-flutter-plugins-dependency
      - name: Cache file .packages
        uses: actions/cache@v2
        id: file-flutter-packages
        with:
          path: ./.packages
          key: file-flutter-packages
      - name: Cache file .dart_tool
        uses: actions/cache@v2
        id: file-dart-tool
        with:
          path: ./.dart_tool
          key: file-dart-tool
      - name: Cache file l10n
        uses: actions/cache@v2
        id: file-l10n
        with:
          path: ./lib/src/configs/l10n
          key: file-l10n
      - name: Cache file main_integration_test.mocks.dart
        uses: actions/cache@v2
        id: file-mock-integration-test
        with:
          path: ./integration_test/main_integration_test.mocks.dart
          key: file-mock-integration-test
      - name: Generate build number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.github_token }}
      - name: Increate build number
        run: export BUILD_NUMBER=$BUILD_NUMBER; make increase-build-number/run
      - name: Run fastlane build_file_apk
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'build_file_apk'
          subdirectory: 'android'
      - name: Cache file .apk
        uses: actions/cache@v2
        id: file-apk
        with:
          path: ./build/app/outputs/apk/release/app-release.apk
          key: file-apk
      - name: Cache file .gradle
        uses: actions/cache@v2
        id: file-gradle
        with:
          path: ./android/.gradle
          key: file-gradle
      - name: Cache file gradlew
        uses: actions/cache@v2
        id: file-gradlew
        with:
          path: ./android/gradlew
          key: file-gradlew
      - name: Cache file gradlew.bat
        uses: actions/cache@v2
        id: file-gradlew-bat
        with:
          path: ./android/gradlew.bat
          key: file-gradlew-bat
      - name: Cache file local.properties
        uses: actions/cache@v2
        id: file-local-property
        with:
          path: ./android/local.properties
          key: file-local-property
      - name: Cache file gradle-wrapper.jar
        uses: actions/cache@v2
        id: file-gradle-wrapper
        with:
          path: ./android/gradle/wrapper/gradle-wrapper.jar
          key: file-gradle-wrapper
      - name: Cache file android/
        uses: actions/cache@v2
        id: file-android
        with:
          path: ./android/
          key: file-android

  test_lab:
    needs: [ setup, build_apk ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Cache file .env
        uses: actions/cache@v2
        id: file-env
        with:
          path: ./.env
          key: file-env
      - name: Cache file .env-cicd
        uses: actions/cache@v2
        id: file-env-cicd
        with:
          path: ./.env-cicd
          key: file-env-cicd
      - name: Cache file google-services.json
        uses: actions/cache@v2
        id: file-env-google-service-android
        with:
          path: ./android/app/google-services.json
          key: file-env-google-service-android
      - name: Cache file upload-keystore.jks
        uses: actions/cache@v2
        id: file-env-upload-keystore
        with:
          path: ./android/upload-keystore.jks
          key: file-env-upload-keystore
      - name: Cache file play-store-credemtials.json
        uses: actions/cache@v2
        id: file-env-play-store
        with:
          path: ./play-store-credentials.json
          key: file-env-play-store
      - name: Cache file key.properties
        uses: actions/cache@v2
        id: file-env-key-property
        with:
          path: ./android/key.properties
          key: file-env-key-property
      - name: Cache file .flutter-plugins
        uses: actions/cache@v2
        id: file-flutter-plugins
        with:
          path: ./.flutter-plugins
          key: file-flutter-plugins
      - name: Cache file .flutter-plugins-depencies
        uses: actions/cache@v2
        id: file-flutter-plugins-dependency
        with:
          path: ./.flutter-plugins-dependencies
          key: file-flutter-plugins-dependency
      - name: Cache file .packages
        uses: actions/cache@v2
        id: file-flutter-packages
        with:
          path: ./.packages
          key: file-flutter-packages
      - name: Cache file .dart_tool
        uses: actions/cache@v2
        id: file-dart-tool
        with:
          path: ./.dart_tool
          key: file-dart-tool
      - name: Cache file l10n
        uses: actions/cache@v2
        id: file-l10n
        with:
          path: ./lib/src/configs/l10n
          key: file-l10n
      - name: Cache file main_integration_test.mocks.dart
        uses: actions/cache@v2
        id: file-mock-integration-test
        with:
          path: ./integration_test/main_integration_test.mocks.dart
          key: file-mock-integration-test
#      - uses: actions/cache@v2
#        id: file-gradle
#        with:
#          path: ./android/.gradle
#          key: file-gradle
#      - uses: actions/cache@v2
#        id: file-gradlew
#        with:
#          path: ./android/gradlew
#          key: file-gradlew
#      - uses: actions/cache@v2
#        id: file-gradlew-bat
#        with:
#          path: ./android/gradlew.bat
#          key: file-gradlew-bat
#      - uses: actions/cache@v2
#        id: file-local-property
#        with:
#          path: ./android/local.properties
#          key: file-local-property
#      - uses: actions/cache@v2
#        id: file-gradle-wrapper
#        with:
#          path: ./android/gradle/wrapper/gradle-wrapper.jar
#          key: file-gradle-wrapper
      - name: Cache file android/
        uses: actions/cache@v2
        id: file-android
        with:
          path: ./android/
          key: file-android
      - name: Run repair package
        run: make project/repair/package
      - name: Run Project install
        run: make project/install/package
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Run fastlane test_lab
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'test_lab'
          subdirectory: 'android'

  mobSF:
    needs: [ setup, build_apk, test_lab ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Open VPN
        run: sudo apt-get install openvpn
      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: '127.0.0.1'
          FILE_OVPN: '.github/vpn/config.ovpn'
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}
      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}
      - name: Cache file .apk
        uses: actions/cache@v2
        id: file-apk
        with:
          path: ./build/app/outputs/apk/release/app-release.apk
          key: file-apk
      - name: Post API with private domain
        env:
          MOBSF_URL: ${{ secrets.MOBSF_URL }}
        run: |
          sudo sh -c "echo nameserver 172.31.0.2 > /etc/resolv.conf"
          curl -vvv $MOBSF_URL/api/v1/scan
      - name: Run fastlane mobSF
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'mobSF'
          subdirectory: 'android'
        env:
          MOBSF_URL: ${{ secrets.MOBSF_URL }}
          MOBSF_API_KEY: ${{ secrets.MOBSF_API_KEY }}
      - name: kill vpn
        if: always()
        run: sudo killall openvpn

  firebase_app_distribute:
    needs: [ setup, build_apk, test_lab, mobSF ]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache file .apk
        uses: actions/cache@v2
        id: file-apk
        with:
          path: ./build/app/outputs/apk/release/app-release.apk
          key: file-apk
      - name: Push file to firebase app distribute (group developer, qa)
        if: ${{ github.event.inputs.branch == 'feature' || github.event.inputs.branch == 'develop' || github.event.inputs.branch == 'bugfix' || github.event.inputs.branch == 'hotfix' }}
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'app_distribution_group_developer_qa' # can run specific group for test with input
          subdirectory: 'android'
        env:
          FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID: ${{ secrets.FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Push file to firebase app distribute (group developer, qa, user)
        if: ${{ github.event.inputs.branch == 'release' }}
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'app_distribution_group_developer_qa_user' # can run specific group for test with input
          subdirectory: 'android'
        env:
          FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID: ${{ secrets.FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Push file to firebase app distribute (group qa)
        if: ${{ github.event.inputs.branch == 'main' }}
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'app_distribution_group_qa' # can run specific group for test with input
          subdirectory: 'android'
        env:
          FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID: ${{ secrets.FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  play_store:
    if: ${{ github.event.inputs.branch == 'main' }}
    needs: [ setup, build_apk, test_lab, mobSF, firebase_app_distribute ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Cache file .env
        uses: actions/cache@v2
        id: file-env
        with:
          path: ./.env
          key: file-env
      - name: Cache file .env-cicd
        uses: actions/cache@v2
        id: file-env-cicd
        with:
          path: ./.env-cicd
          key: file-env-cicd
      - name: Cache file google-services.json
        uses: actions/cache@v2
        id: file-env-google-service-android
        with:
          path: ./android/app/google-services.json
          key: file-env-google-service-android
      - name: Cache file upload-keystore.jks
        uses: actions/cache@v2
        id: file-env-upload-keystore
        with:
          path: ./android/upload-keystore.jks
          key: file-env-upload-keystore
      - name: Cache file play-store-credemtials.json
        uses: actions/cache@v2
        id: file-env-play-store
        with:
          path: ./play-store-credentials.json
          key: file-env-play-store
      - name: Cache file key.properties
        uses: actions/cache@v2
        id: file-env-key-property
        with:
          path: ./android/key.properties
          key: file-env-key-property
      - name: Cache file .flutter-plugins
        uses: actions/cache@v2
        id: file-flutter-plugins
        with:
          path: ./.flutter-plugins
          key: file-flutter-plugins
      - name: Cache file .flutter-plugins-depencies
        uses: actions/cache@v2
        id: file-flutter-plugins-dependency
        with:
          path: ./.flutter-plugins-dependencies
          key: file-flutter-plugins-dependency
      - name: Cache file .packages
        uses: actions/cache@v2
        id: file-flutter-packages
        with:
          path: ./.packages
          key: file-flutter-packages
      - name: Cache file .dart_tool
        uses: actions/cache@v2
        id: file-dart-tool
        with:
          path: ./.dart_tool
          key: file-dart-tool
      - name: Cache file l10n
        uses: actions/cache@v2
        id: file-l10n
        with:
          path: ./lib/src/configs/l10n
          key: file-l10n
      - name: Cache file main_integration_test.mocks.dart
        uses: actions/cache@v2
        id: file-mock-integration-test
        with:
          path: ./integration_test/main_integration_test.mocks.dart
          key: file-mock-integration-test
      - name: Generate build number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.github_token }}
      - name: Increase build number
        run: export BUILD_NUMBER=$BUILD_NUMBER; make increase-build-number/run
      - name: Run fastlane build_file_appbundle
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'build_file_appbundle'
          subdirectory: 'android'
      - name: Run fastlane beta
        uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'beta'
          subdirectory: 'android'
        env:
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}

  notify_slack_success:
    runs-on: ubuntu-latest
    needs: [ setup, build_apk, test_lab, mobSF, firebase_app_distribute ]
    if: success()
    steps:
      - name: Notify test result
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#90be6d'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Job is success

  notify_slack_failure:
    runs-on: ubuntu-latest
    needs: [ setup, build_apk, test_lab, mobSF, firebase_app_distribute ]
    if: failure()
    steps:
      - name: Notify test result
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#f94144'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Job is failure

  notify_slack_success_with_play_store:
    runs-on: ubuntu-latest
    needs: [ setup, build_apk, test_lab, mobSF, firebase_app_distribute, play_store ]
    if: success()
    steps:
      - name: Notify test result
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#90be6d'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Job is success

  notify_slack_failure_with_play_store:
    runs-on: ubuntu-latest
    needs: [ setup, build_apk, test_lab, mobSF, firebase_app_distribute, play_store ]
    if: failure()
    steps:
      - name: Notify test result
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#f94144'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Job is failure
