name: CI/CD fastlane for iOS/Android

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java version 12.x
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter version stable
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Create file .env
        run: |
          cat << EOF >> .env
          API_URL=${{ secrets.API_URL_DEV }}
          FASTLANE_SLACK_WEB_HOOK=${{ secrets.FASTLANE_SLACK_WEB_HOOK }}
          FASTLANE_SLACK_CHANNEL=${{ secrets.FASTLANE_SLACK_CHANNEL }}
          FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID=${{ secrets.FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_ANDROID }}
          FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS=${{ secrets.FASTLANE_FIREBASE_APP_DISTRIBUTE_ID_IOS }}
          APP_BUNDLE_ID=${{ secrets.APP_BUNDLE_ID }}
          APPLE_ID=${{ secrets.APPLE_ID }}
          APPLE_ITC_TEAM_ID=${{ secrets.APPLE_ITC_TEAM_ID }}
          APPLE_TEAM_ID=${{ secrets.APPLE_TEAM_ID }}
          APPLE_PROVISIONING_PROFILE_DISTRIBUTE=${{ secrets.APPLE_PROVISIONING_PROFILE_DISTRIBUTE }}
          APPLE_PROVISIONING_PROFILE_ADHOC=${{ secrets.APPLE_PROVISIONING_PROFILE_ADHOC }}
          GRPC_HOST=${{ secrets.GRPC_HOST }}
          GRPC_PORT=${{ secrets.GRPC_PORT }}
          GRPC_SCHEME=${{ secrets.GRPC_SCHEME }}
          FASTLANE_FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}
          EOF
      - name: Create file google-services.json
        run: |
          cd android/app; cat << EOF >> google-services.json
          ${{ secrets.GOOGLE_SERVICES_ANDROID }}
          EOF
      - name: Create file encode-upload-keystore.jks
        run: |
          cd android; cat << EOF >> encode-upload-keystore.jks
          ${{ secrets.UPLOAD_KEYSTORE }}
          EOF
      - name: Create file upload-keystore.jks
        run: base64 -d android/encode-upload-keystore.jks > android/upload-keystore.jks
      - name: Create file play-store-credentials.json
        run: |
          cat << EOF >> play-store-credentials.json
          ${{ secrets.PLAY_STORE_CREDENTIALS }}
          EOF
      - name: Create file key.properties
        run: |
          cd android; cat << EOF >> key.properties
          ${{ secrets.KEY_PROPERTIES_ANDROID }}
          EOF
      - name: Install dependencies
        run: make project/install/package
      - name: Generate l10n
        run: make l10n/generate
      - name: Generate mock file for test
        run: make test/generate/mock-file
      - name: Build file .apk
        run: flutter build apk  --release
#       - name: Upload apk
#         uses: actions/upload-artifact@v2
#         with:
#           name: apk-build
#           path: build/app/outputs/apk/release
#       - uses: maierj/fastlane-action@v2.0.1
#         with:
#           lane: 'test_lab'
#           subdirectory: 'android'
#       - name: Set up Cloud SDK
#         uses: google-github-actions/setup-gcloud@master
#         with:
#           project_id: ${{ secrets.GCP_PROJECT_ID }}
#           service_account_key: ${{ secrets.GCP_SA_KEY }}
#       - name: Run test on firebase test lab
#         run: gcloud firebase test android run --type instrumentation --app build/app/outputs/apk/debug/app-debug.apk --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=pl,orientation=portrait
      - uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'app_distribution_group_developer'
          subdirectory: 'android'
      - uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'beta'
          subdirectory: 'android'
